package com.sudokusolver;

public class Puzzle {

	/* Blank Grid
 private int[][] grid = { 
 { 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 
 { 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 
 { 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 
 { 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 
 { 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 
 { 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 
 { 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 
 { 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 
 { 0, 0, 0, 0, 0, 0, 0, 0, 0 }, };
 
Easy
*/
	 private int[][] grid = { { 0, 0, 0, 0, 0, 0, 3, 2, 0 }, { 0, 0, 3, 1, 7, 0,
	 6, 0, 0 }, { 9, 0, 0, 2, 0, 5, 7, 0, 1 }, { 0, 8, 7, 4, 0, 0, 0, 3, 5 }, { 0,
	 0, 0, 7, 0, 3, 0, 0, 0 }, { 3, 2, 0, 0, 0, 9, 1, 7, 0 }, { 5, 0, 9, 8, 0, 6,
	 0, 0, 7 }, { 0, 0, 6, 0, 1, 2, 4, 0, 0 }, { 0, 1, 2, 0, 0, 0, 0, 0, 0 } };
	
/* Very Difficult
 * 
 private int[][] grid = { 
 { 4, 0, 0, 0, 0, 0, 0, 0, 0 }, 
 { 0, 0, 0, 0, 0, 9, 0, 0, 0 }, 
 { 0, 0, 0, 0, 0, 0, 7, 8, 5 }, 
 { 0, 0, 7, 0, 4, 8, 0, 5, 0 }, 
 { 0, 0, 1, 3, 0, 0, 0, 0, 0 }, 
 { 0, 0, 6, 0, 7, 0, 0, 0, 0 }, 
 { 8, 6, 0, 0, 0, 0, 9, 0, 3 }, 
 { 7, 0, 0, 0, 0, 5, 0, 6, 2 }, 
 { 0, 0, 3, 7, 0, 0, 0, 0, 0 }, };
*/
 
	
// World's hardest Sudoku
 /*
	 private int[][] grid = { 
			 { 8, 0, 0, 0, 0, 0, 0, 0, 0 }, 
			 { 0, 0, 3, 6, 0, 0, 0, 0, 0 }, 
			 { 0, 7, 0, 0, 9, 0, 2, 0, 0 }, 
			 { 0, 5, 0, 0, 0, 7, 0, 0, 0 }, 
			 { 0, 0, 0, 0, 4, 5, 7, 0, 0 }, 
			 { 0, 0, 0, 1, 0, 0, 0, 3, 0 }, 
			 { 0, 0, 1, 0, 0, 0, 0, 6, 8 }, 
			 { 0, 0, 8, 5, 0, 0, 0, 1, 0 }, 
			 { 0, 9, 0, 0, 0, 0, 4, 0, 0 }, };
*/
/*

 private int[][] grid = { 
 { 0, 0, 5, 3, 0, 0, 0, 0, 0 }, 
 { 8, 0, 0, 0, 0, 0, 0, 2, 0 }, 
 { 0, 7, 0, 0, 1, 0, 5, 0, 0 }, 
 { 4, 0, 0, 0, 0, 5, 3, 0, 0 }, 
 { 0, 1, 0, 0, 7, 0, 0, 0, 6 }, 
 { 0, 0, 3, 2, 0, 0, 0, 8, 0 }, 
 { 0, 6, 0, 5, 0, 0, 0, 0, 9 }, 
 { 0, 0, 4, 0, 0, 0, 0, 3, 0 }, 
 { 0, 0, 0, 0, 0, 9, 7, 0, 0 }, };
 */
	
	
	public int[][] getGrid() {
		return this.grid;
	}

}
